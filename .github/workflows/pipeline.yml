name: Apply Gen2 IaC

on:
  push:
    branches:
      - master

jobs:
  deployProd:
    # The type of runner that the job will run on
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'

    name: terraform apply prod
    runs-on: ubuntu-latest

    env:
      TF_LOG: "ERROR"
      TF_LOG_PATH: "terraform.log"
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID_PROD }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}

    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.8.3
      - name: Configure Git permissions
        run: |
          git config --local --remove-section http."https://github.com/"
          git config --global url."https://${CA_GITHUB_USER}:${CA_GITHUB_ACCESS_TOKEN}@github.com/raisolanoorg".insteadOf "https://github.com/raisolanoorg"
        env:
          CA_GITHUB_USER: ${{ secrets.DEPLOY_GITHUB_USER }}
          CA_GITHUB_ACCESS_TOKEN: ${{ secrets.DEPLOY_GITHUB_ACCESS_TOKEN }}

      - name: terraform Init
        id: init
        env:
          TF_VAR_my_link: ${{ secrets.DEPLOY_GITHUB_ACCESS_TOKEN }}
        run: |
          terraform init \
            -input=false \
            -backend-config="bucket=gen2-terraform-iac-prod" \
            -backend-config="key=gen2.tfstate" \
            -backend-config="region=us-east-1" \
            -backend-config="encrypt=true" || exit 1
      - name: terraform plan
        id: plan
        env:
          TF_VAR_my_link: ${{ secrets.DEPLOY_GITHUB_ACCESS_TOKEN }}
        run: terraform plan -input=false -compact-warnings -var-file=prod.tfvars -out=tfplan
      - name: terraform show
        id: show
        run: terraform show tfplan
      - name: terraform apply
        id: apply
        env:
          TF_VAR_my_link: ${{ secrets.DEPLOY_GITHUB_ACCESS_TOKEN }}
        run: terraform apply -input=false -compact-warnings -var-file=prod.tfvars -auto-approve